{
  "author": {
    "name": "SHIN Suzuki",
    "email": "shinout310@gmail.com"
  },
  "name": "interval-tree",
  "description": "interval tree in javascript",
  "version": "0.0.2",
  "keywords": [
    "tree",
    "interval",
    "range",
    "algorithm"
  ],
  "repository": {
    "type": "git",
    "url": "github:shinout/interval-tree.git"
  },
  "main": "IntervalTree.js",
  "scripts": {
    "test": "test.js"
  },
  "engines": {
    "node": ">=0.4"
  },
  "dependencies": {
    "sortedlist": ">=0.1.0"
  },
  "devDependencies": {},
  "readme": "interval-tree\n==========\ninterval tree in JavaScript\n\n### Installation ###\n    git clone git://github.com/shinout/interval-tree.git\n\n    OR\n\n    npm install interval-tree\n\n### Usage ###\n    var IntervalTree = require('interval-tree');\n\n    // add interval data\n\n    var itree = new IntervalTree(300); // 300 : the center of the tree\n\n    itree.add([22, 56,  'foo']);\n    itree.add([44, 199, 'bar']);\n\n    // search 1: get overlapped regions from one point\n    var results = itree.search(103);\n\n    results.forEach(function(result) {\n      console.log(result.data); // overlapped range data\n      console.log(result.id);   // id of the overlapped range\n    });\n\n    // search 2: get overlapped regions from a range\n    var results2 = itree.search(103, 400);\n\n    results2.forEach(function(result) {\n      console.log(result.data);  // overlapped range data\n      console.log(result.id);    // id of the overlapped range\n      console.log(result.rate1); // overlapped rate to the given range\n      console.log(result.rate2); // overlapped rate to the range of this result\n    });\n\n\n",
  "readmeFilename": "README.md",
  "_id": "interval-tree@0.0.2",
  "dist": {
    "shasum": "519b24bff61b3be4e95dc9b22dc899553338b858"
  },
  "_from": "interval-tree@",
  "_resolved": "https://registry.npmjs.org/interval-tree/-/interval-tree-0.0.2.tgz"
}
